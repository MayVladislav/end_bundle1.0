import datetime
import time
import requests
from aiogram import types, Router, F, Bot
from aiogram.filters import CommandStart, Command

import config
from api_connect.api import GetList, get_time_expired, get_type, GetLastElement, RemoveLastElement, generate_qr_code
from keyboards.reply import user_reply
from filters.user_private_filter import MyAdminFilter

bot = Bot(token='6220269058:AAEjFkYsFX5NqfIIV_1IqJK6_iFnQCsUp2k')
user_private_router = Router()
base_url = 'http://38.180.156.31:64199/api/v1/'


@user_private_router.message(F.text == '–í –Ω–∞—á–∞–ª–æ')
@user_private_router.message(CommandStart())
async def start(message: types.Message):
    await message.answer(
        '''–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëãüèº
        
–≠—Ç–æ –±–æ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ VPN free ü§ñ
–û—Å—Ç–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –≤—Å–µ–≥–æ –ø–∞—Ä—É –∫–Ω–æ–ø–æ–∫, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å VPN üéØ
    
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—à VPN —Å–µ—Ä–≤–∏—Å - —ç—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!üïäÔ∏è''',
        reply_markup=user_reply.start_keyboard
    )


@user_private_router.message(F.text == 'VPN')
async def vpn(message: types.Message):
    await message.answer('–í—ã–±–∏—Ä–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VPN', reply_markup=user_reply.vpn_keyboard)


@user_private_router.message(F.text == '–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VPN')
async def vpn_post(message: types.Message):
    data = GetLastElement()
    print(data)
    for i in data:
        user_name = i['user_name']
        date_expire = i['date_expired']
        url = i['url']
        photo_url = generate_qr_code()

        type_ = i['type']

        date_expired = get_time_expired(date_expire)
        type_ = get_type(type_)

        #RemoveLastElement()

        user = message.from_user
        user_id = user.id
        first_name = user.first_name
        last_name = user.last_name
        current_time = datetime.datetime.now()

        payload = {
            "user_id": user_id,
            "first_name": first_name,
            "last_name": last_name,
            "config_name": user_name,
            "time_exp": date_expire,
            "time_take": current_time
        }
        api_url = base_url + 'add_user_info/'
        response = requests.post(api_url, data=payload, )

        # if response.status_code == 201:
        #    await message.answer("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π API.")
        # else:
        #    await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π API.")

        if photo_url is not None:
            await message.answer('QR –∫–æ–¥')
            await message.answer_photo(photo_url)

        return await message.answer(
            f'''
–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_name}

–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {date_expired}

–ê–¥—Ä–µ—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: <code><a href='{url}'>{url}</a></code>

–¢–∏–ø —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {type_}

–í–ù–ò–ú–ê–ù–ò–ï: –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –Ω–µ–µ –∏ –æ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–æ–ø–∏—Ä—É–µ—Ç—Å—è''',
            parse_mode='HTML',
            reply_markup=user_reply.support_keyboard)


# @user_private_router.message(F.text == '–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VPN')
# async def vpn_post(message: types.Message):
#    await message.answer('–í–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è', reply_markup=user_reply.support_keyboard)
#    path = 'C:/Users/izi89/Downloads/ATLANTA_US_VPN.ovpn'
#    file = FSInputFile(path)
#    await message.answer_document(file)

@user_private_router.message(F.text == '–ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
@user_private_router.message(Command('help'))
async def support(message: types.Message):
    await message.answer('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏', reply_markup=user_reply.support_keyboard)


@user_private_router.message(F.text == '–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ')
@user_private_router.message(Command('about_me'))
async def echo(message: types.Message):
    await message.answer(str(message.from_user.id) + ' ' + str(message.from_user.full_name))


@user_private_router.message(F.text == '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è iOS')
async def text(message: types.Message):
    await message.answer(
        '''
<a href='https://telegra.ph/Instrukciya-IOS-04-27'>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è IOS</a> üì≤
            ''',
        parse_mode='HTML',
        reply_markup=user_reply.start_keyboard),


@user_private_router.message(F.text == '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è Android')
async def text(message: types.Message):
    await message.answer(
        '''
<a href='https://telegra.ph/Instrukciya-Android-04-27'>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è Android</a> üì≤
            ''',
        parse_mode='HTML',
        reply_markup=user_reply.start_keyboard),


@user_private_router.message(F.text == '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è Windows')
async def text(message: types.Message):
    await message.answer(
        '''
<a href='https://telegra.ph/Instrukciya-Windows-04-26'>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è Windows</a> üì≤
            ''',
        parse_mode='HTML',
        reply_markup=user_reply.start_keyboard),


@user_private_router.message(F.photo)
async def photo(message: types.Message):
    await message.answer_photo('https://free-png.ru/wp-content/uploads/2023/01/free-png.ru-128.png')


@user_private_router.message(F.text == '–û –Ω–∞—Å')
async def text(message: types.Message):
    await message.answer('VPN free <3')


@user_private_router.message(F.text == '–ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–º–æ—â–∏')
async def text(message: types.Message):
    await message.answer('–ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–º–æ—â–∏ @Ffffff27', reply_markup=user_reply.start_keyboard)


@user_private_router.message(F.text)
async def text(message: types.Message):
    await message.answer('–ü–µ—Ä–µ–≤–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=user_reply.start_keyboard)
